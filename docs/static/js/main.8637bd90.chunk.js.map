{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","console","log","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAkCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OACQ,sBAAMC,SARO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAKlC,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAhBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEDG,MAAMR,GAFL,cAEbS,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KACPC,QAAQC,IAAIF,GACNG,EAAOH,EAAKI,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QATvB,kBAYZc,GAZY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNS,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAatC,OARAC,qBAAU,WACNnB,EAAQC,GAAUmB,MAAK,SAAAC,GACnBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGlB,CAACf,IACGgB,EDXwBK,CAAarB,GAAhCY,EADuB,EAC5BN,KAAaS,EADe,EACfA,QACpB,OACI,qCACA,oBAAInB,UAAU,oCAAd,SAAmDI,IAClDe,GAAW,mBAAGnB,UAAU,mCAAb,qBACX,qBAAKA,UAAU,YAAf,SAEMgB,EAAOF,KAAI,SAAAC,GACN,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIlB,aEalC6B,EAtBM,WAAO,IAAD,EACY3C,mBAAS,CAAC,cADtB,mBACjB4C,EADiB,KACL7C,EADK,KAGxB,OACK,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWb,KAAI,SAAAV,GACf,OAAO,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,cCXrCwB,EAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8637bd90.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2)\n        setCategories(cats => [inputValue, ...cats, ])\n    }\n\n\n    return (\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    value={inputValue}\n                    onChange= {handleInputChange}\n                />\n            </form>\n        );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\" >\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}","export const getGifs = async(category)=> {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=C0MBCjbHsB9iRFt4nlRGhlr2hW6cx79X`;\n    const res = await fetch(url);\n    const {data} = await res.json();\n    console.log(data);\n    const gifs = data.map(img=>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}\n","import React, {useEffect, useState} from 'react'\n\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({category}) => {\n    const {data:images, loading} = useFetchGifs(category);\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n        {<div className=\"card-grid\">\n            {\n               images.map(img => {\n                    return <GifGridItem key={img.id} {...img}/>\n               })\n            } \n        </div>\n        }\n        </>\n    )\n}","import React, { useEffect, useState } from \"react\"\n\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    useEffect(() =>{\n        getGifs(category).then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            })\n        });\n    }, [category])\n    return state;\n}","import React, {useState} from 'react';\n\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n   const [categories, setCategories] = useState(['One Punch']);\n\n   return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            <ol>\n                {\n                    categories.map(category => {\n                    return <GifGrid \n                                key={category} \n                                category={category}>\n                            </GifGrid>\n                })\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import './index.css';\n\nimport GifExpertApp from './GifExpertApp'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}